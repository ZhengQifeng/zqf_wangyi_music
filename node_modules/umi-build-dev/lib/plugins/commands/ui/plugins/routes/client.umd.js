(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('dva'), require('antd')) :
	typeof define === 'function' && define.amd ? define(['react', 'dva', 'antd'], factory) :
	(global.g_umiUIPlugins = global.g_umiUIPlugins || {}, global.g_umiUIPlugins.routes = factory(global.React,global.dva,global.antd));
}(this, (function (react,dva,antd) { 'use strict';

	react = react && react.hasOwnProperty('default') ? react['default'] : react;
	dva = dva && dva.hasOwnProperty('default') ? dva['default'] : dva;
	antd = antd && antd.hasOwnProperty('default') ? antd['default'] : antd;

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	function getCjsExportFromNamespace (n) {
		return n && n.default || n;
	}



	var client = /*#__PURE__*/Object.freeze({
		default: undefined
	});

	var model = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;

	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var _default = {
	  namespace: 'routes',
	  state: {
	    data: []
	  },
	  subscriptions: {
	    setup({
	      history
	    }) {
	      return history.listen(({
	        pathname
	      }) => {
	        if (pathname === '/routes') {
	          window.socketReady(() => {
	            window.send('routes/fetch');
	          });
	        }
	      });
	    }

	  },
	  reducers: {
	    save(state, {
	      payload
	    }) {
	      return _objectSpread({}, state, {
	        data: payload
	      });
	    }

	  }
	};
	exports.default = _default;
	});

	unwrapExports(model);

	getCjsExportFromNamespace(client);

	var client$2 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;

	var _react = _interopRequireDefault(react);







	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Routes = (0, dva.connect)(function (state) {
	  return {
	    routes: state.routes
	  };
	})(function (props) {
	  function renderRoutes(routes) {
	    return _react.default.createElement("ul", {
	      className: "client-list"
	    }, routes.map(function (route, i) {
	      if (!route.path) return null;
	      var keys = Object.keys(route).filter(function (key) {
	        if (['exact', 'routes', 'component'].includes(key)) return false;
	        if (key.charAt(0) === '_') return false;
	        return true;
	      });

	      function getValue(key) {
	        if (key === 'path') {
	          return _react.default.createElement("a", {
	            href: "http://localhost:8000".concat(route[key])
	          }, route[key]);
	        }

	        return route[key];
	      }

	      return _react.default.createElement("li", {
	        key: route.key || i,
	        className: "client-item"
	      }, _react.default.createElement("div", null, _react.default.createElement(antd.Icon, {
	        className: "client-type",
	        type: route.routes ? 'folder-open' : 'file'
	      }), _react.default.createElement("span", {
	        className: "client-info"
	      }, keys.map(function (key, i) {
	        return _react.default.createElement("span", {
	          key: key
	        }, _react.default.createElement("strong", null, key, ": "), _react.default.createElement("code", null, getValue(key)), i === keys.length - 1 ? '' : _react.default.createElement("strong", null, ", "));
	      })), _react.default.createElement(antd.Popconfirm, {
	        title: "Are you sure delete this component?",
	        onConfirm: function (route) {
	          window.send('rm', ['page', route.component]);
	        }.bind(null, route)
	      }, _react.default.createElement(antd.Icon, {
	        className: "client-icon",
	        type: "delete",
	        theme: "filled"
	      }))), route.routes ? renderRoutes(route.routes) : null);
	    }));
	  }

	  return _react.default.createElement("div", null, _react.default.createElement("div", {
	    className: "client-actions"
	  }, _react.default.createElement(antd.Button, {
	    type: "primary",
	    onClick: function onClick() {
	      var name = window.prompt("What's your page name?");

	      if (name) {
	        window.send('generate', ['page', name]);
	      }
	    }
	  }, "add route"), "\xA0\xA0", _react.default.createElement(antd.Button, {
	    type: "primary",
	    onClick: function onClick() {
	      var name = window.prompt("What's your layout name?");

	      if (name) {
	        window.send('generate', ['layout', name]);
	      }
	    }
	  }, "add layout")), renderRoutes(props.routes.data));
	});

	var _default = function _default(api) {
	  api.addPanel({
	    title: 'Routes Manager',
	    path: '/routes',
	    component: Routes,
	    models: [model.default]
	  });
	};

	exports.default = _default;
	});

	var client$3 = unwrapExports(client$2);

	return client$3;

})));
